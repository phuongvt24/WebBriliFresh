// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebBriliFresh.Models;

#nullable disable

namespace WebBriliFresh.Migrations
{
    [DbContext(typeof(BriliFreshDbContext))]
    partial class BriliFreshDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.Address", b =>
                {
                    b.Property<int>("AddId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AddID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddId"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CusId")
                        .HasColumnType("int")
                        .HasColumnName("CusID");

                    b.Property<int?>("Default")
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecificAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ward")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddId")
                        .HasName("PK__Address__A0E1ADEE5C6A8975");

                    b.HasIndex("CusId");

                    b.ToTable("Address", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.Customer", b =>
                {
                    b.Property<int>("CusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CusId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RewardId")
                        .HasColumnType("int")
                        .HasColumnName("RewardID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("CusId")
                        .HasName("PK__Customer__2F187130CC48DD9C");

                    b.HasIndex("RewardId");

                    b.HasIndex("UserId");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.DiscountAll", b =>
                {
                    b.Property<int>("DisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DisID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisId"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<double?>("Value")
                        .HasColumnType("float");

                    b.HasKey("DisId")
                        .HasName("PK__Discount__E2AA7E64251E5A96");

                    b.ToTable("Discount_All", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.DiscountOrder", b =>
                {
                    b.Property<int>("DisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DisID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisId"));

                    b.Property<int?>("CusType")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("DisCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DisRate")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<decimal?>("MaxDis")
                        .IsRequired()
                        .HasColumnType("decimal(18, 0)");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.HasKey("DisId")
                        .HasName("PK__Discount__E2AA7E6467B44496");

                    b.ToTable("Discount_Order", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.DiscountProduct", b =>
                {
                    b.Property<int>("DisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DisID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisId"));

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<int?>("ProId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("ProID");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<double?>("Value")
                        .IsRequired()
                        .HasColumnType("float");

                    b.HasKey("DisId")
                        .HasName("PK__Discount__E2AA7E64283CAB89");

                    b.HasIndex("ProId");

                    b.ToTable("Discount_Product", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.DiscountStore", b =>
                {
                    b.Property<int>("DisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DisID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisId"));

                    b.Property<DateTime?>("EndDate")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<int?>("StoreId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("StoreID");

                    b.Property<double?>("Value")
                        .IsRequired()
                        .HasColumnType("float");

                    b.HasKey("DisId")
                        .HasName("PK__Discount__E2AA7E642ADFC807");

                    b.HasIndex("StoreId");

                    b.ToTable("Discount_Store", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.DiscountType", b =>
                {
                    b.Property<int>("DisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DisID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisId"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.Property<double?>("Value")
                        .HasColumnType("float");

                    b.HasKey("DisId")
                        .HasName("PK__Discount__E2AA7E646325E4F3");

                    b.HasIndex("TypeId");

                    b.ToTable("Discount_Type", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmpID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecificAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("StoreID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpId")
                        .HasName("PK__Employee__AF2DBA79D9282422");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.Feedback", b =>
                {
                    b.Property<int>("FbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FbID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FbId"));

                    b.Property<int?>("CusId")
                        .HasColumnType("int")
                        .HasColumnName("CusID");

                    b.Property<int?>("Like")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int?>("ProId")
                        .HasColumnType("int")
                        .HasColumnName("ProID");

                    b.Property<int?>("Rate")
                        .HasColumnType("int");

                    b.Property<int?>("ReplyId")
                        .HasColumnType("int")
                        .HasColumnName("ReplyID");

                    b.Property<DateTime?>("SendDate")
                        .HasColumnType("datetime");

                    b.HasKey("FbId")
                        .HasName("PK__Feedback__36769D6C67C84AAA");

                    b.HasIndex("CusId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProId");

                    b.HasIndex("ReplyId");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.FeedbackImage", b =>
                {
                    b.Property<int>("FbImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FbImgID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FbImgId"));

                    b.Property<int?>("FbId")
                        .HasColumnType("int")
                        .HasColumnName("FbID");

                    b.Property<string>("ImgData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FbImgId")
                        .HasName("PK__Feedback__05FB6A30A82988FC");

                    b.HasIndex("FbId");

                    b.ToTable("Feedback_Image", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("AddId")
                        .HasColumnType("int")
                        .HasColumnName("AddID");

                    b.Property<int?>("CusId")
                        .HasColumnType("int")
                        .HasColumnName("CusID");

                    b.Property<int?>("DisId")
                        .HasColumnType("int")
                        .HasColumnName("DisID");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("OrderTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("PayBy")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("StoreID");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("TransId")
                        .HasColumnType("int")
                        .HasColumnName("TransID");

                    b.HasKey("OrderId")
                        .HasName("PK__Order__C3905BAF1691363C");

                    b.HasIndex("AddId");

                    b.HasIndex("CusId");

                    b.HasIndex("DisId");

                    b.HasIndex("StoreId");

                    b.HasIndex("TransId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int>("ProId")
                        .HasColumnType("int")
                        .HasColumnName("ProID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProId")
                        .HasName("PK__Order_De__D5B072F06219988F");

                    b.HasIndex("ProId");

                    b.ToTable("Order_Details", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.Product", b =>
                {
                    b.Property<int>("ProId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProId"));

                    b.Property<string>("Des")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("isDeleted");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProId")
                        .HasName("PK__Product__620295F03EE0F206");

                    b.HasIndex("TypeId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.ProductImage", b =>
                {
                    b.Property<int>("ImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ImgID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImgId"));

                    b.Property<string>("ImgData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProId")
                        .HasColumnType("int")
                        .HasColumnName("ProID");

                    b.HasKey("ImgId")
                        .HasName("PK__Product___352F54130CD1158A");

                    b.HasIndex("ProId");

                    b.ToTable("Product_Image", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.QnA", b =>
                {
                    b.Property<int>("QnAid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QnAID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QnAid"));

                    b.Property<int?>("CusId")
                        .HasColumnType("int")
                        .HasColumnName("CusID");

                    b.Property<int?>("Like")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProId")
                        .HasColumnType("int")
                        .HasColumnName("ProID");

                    b.Property<int?>("ReplyId")
                        .HasColumnType("int")
                        .HasColumnName("ReplyID");

                    b.Property<DateTime?>("SendDate")
                        .HasColumnType("datetime");

                    b.HasKey("QnAid")
                        .HasName("PK__QnA__C4DF8B2922DE5FDF");

                    b.HasIndex("CusId");

                    b.HasIndex("ProId");

                    b.HasIndex("ReplyId");

                    b.ToTable("QnA", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.QnAImage", b =>
                {
                    b.Property<int>("QnAimgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QnAImgID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QnAimgId"));

                    b.Property<string>("ImgData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QnAid")
                        .HasColumnType("int")
                        .HasColumnName("QnAID");

                    b.HasKey("QnAimgId")
                        .HasName("PK__QnA_Imag__1924FF469328EBC5");

                    b.HasIndex("QnAid");

                    b.ToTable("QnA_Image", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.Reward", b =>
                {
                    b.Property<int>("RewardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RewardID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RewardId"));

                    b.Property<int?>("CusType")
                        .HasColumnType("int");

                    b.Property<decimal?>("Point")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("RewardId")
                        .HasName("PK__Reward__82501599E3AAB6E9");

                    b.ToTable("Reward", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.Stock", b =>
                {
                    b.Property<int>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("StoreID")
                        .HasColumnOrder(0);

                    b.Property<int>("ProId")
                        .HasColumnType("int")
                        .HasColumnName("ProID")
                        .HasColumnOrder(1);

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("StoreId", "ProId")
                        .HasName("PK__Stock__2DA2D9BE717269A2");

                    b.HasIndex("ProId");

                    b.ToTable("Stock", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StoreID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("SpecificAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreId")
                        .HasName("PK__Store__3B82F0E1CFE80ADD");

                    b.ToTable("Store", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.Transport", b =>
                {
                    b.Property<int>("TransId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TransID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransId"));

                    b.Property<decimal?>("Fee")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("ShippingDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Transporter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("TransId")
                        .HasName("PK__Transpor__9E5DDB1C2C5F3C11");

                    b.ToTable("Transport", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.Type", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"));

                    b.Property<string>("MainType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId")
                        .HasName("PK__Type__516F0395E73FD56F");

                    b.ToTable("Type", (string)null);
                });

            modelBuilder.Entity("WebBriliFresh.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__User__1788CCAC6C9E8B5F");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("WebBriliFresh.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("WebBriliFresh.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("WebBriliFresh.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("WebBriliFresh.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBriliFresh.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("WebBriliFresh.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebBriliFresh.Models.Address", b =>
                {
                    b.HasOne("WebBriliFresh.Models.Customer", "Cus")
                        .WithMany("Addresses")
                        .HasForeignKey("CusId")
                        .HasConstraintName("fk_Address_1");

                    b.Navigation("Cus");
                });

            modelBuilder.Entity("WebBriliFresh.Models.Customer", b =>
                {
                    b.HasOne("WebBriliFresh.Models.Reward", "Reward")
                        .WithMany("Customers")
                        .HasForeignKey("RewardId")
                        .HasConstraintName("fk_Customer_2");

                    b.HasOne("WebBriliFresh.Models.User", "User")
                        .WithMany("Customers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_Customer_1");

                    b.Navigation("Reward");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebBriliFresh.Models.DiscountProduct", b =>
                {
                    b.HasOne("WebBriliFresh.Models.Product", "Pro")
                        .WithMany("DiscountProducts")
                        .HasForeignKey("ProId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Discount_Product_1");

                    b.Navigation("Pro");
                });

            modelBuilder.Entity("WebBriliFresh.Models.DiscountStore", b =>
                {
                    b.HasOne("WebBriliFresh.Models.Store", "Store")
                        .WithMany("DiscountStores")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Discount_Store_1");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("WebBriliFresh.Models.DiscountType", b =>
                {
                    b.HasOne("WebBriliFresh.Models.Type", "Type")
                        .WithMany("DiscountTypes")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("fk_Discount_Type_1");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("WebBriliFresh.Models.Employee", b =>
                {
                    b.HasOne("WebBriliFresh.Models.Store", "Store")
                        .WithMany("Employees")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("fk_Employee_2");

                    b.HasOne("WebBriliFresh.Models.User", "User")
                        .WithMany("Employees")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_Employee_1");

                    b.Navigation("Store");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebBriliFresh.Models.Feedback", b =>
                {
                    b.HasOne("WebBriliFresh.Models.Customer", "Cus")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CusId")
                        .HasConstraintName("fk_Feedback_3");

                    b.HasOne("WebBriliFresh.Models.Order", "Order")
                        .WithMany("Feedbacks")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("fk_Feedback_4");

                    b.HasOne("WebBriliFresh.Models.Product", "Pro")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ProId")
                        .HasConstraintName("fk_Feedback_2");

                    b.HasOne("WebBriliFresh.Models.Feedback", "Reply")
                        .WithMany("InverseReply")
                        .HasForeignKey("ReplyId")
                        .HasConstraintName("fk_Feedback_1");

                    b.Navigation("Cus");

                    b.Navigation("Order");

                    b.Navigation("Pro");

                    b.Navigation("Reply");
                });

            modelBuilder.Entity("WebBriliFresh.Models.FeedbackImage", b =>
                {
                    b.HasOne("WebBriliFresh.Models.Feedback", "Fb")
                        .WithMany("FeedbackImages")
                        .HasForeignKey("FbId")
                        .HasConstraintName("fk_Feedback_Image_1");

                    b.Navigation("Fb");
                });

            modelBuilder.Entity("WebBriliFresh.Models.Order", b =>
                {
                    b.HasOne("WebBriliFresh.Models.Address", "Add")
                        .WithMany("Orders")
                        .HasForeignKey("AddId")
                        .HasConstraintName("fk_Order_1");

                    b.HasOne("WebBriliFresh.Models.Customer", "Cus")
                        .WithMany("Orders")
                        .HasForeignKey("CusId")
                        .HasConstraintName("fk_Order_5");

                    b.HasOne("WebBriliFresh.Models.DiscountOrder", "Dis")
                        .WithMany("Orders")
                        .HasForeignKey("DisId")
                        .HasConstraintName("fk_Order_3");

                    b.HasOne("WebBriliFresh.Models.Store", "Store")
                        .WithMany("Orders")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("fk_Order_4");

                    b.HasOne("WebBriliFresh.Models.Transport", "Trans")
                        .WithMany("Orders")
                        .HasForeignKey("TransId")
                        .HasConstraintName("fk_Order_2");

                    b.Navigation("Add");

                    b.Navigation("Cus");

                    b.Navigation("Dis");

                    b.Navigation("Store");

                    b.Navigation("Trans");
                });

            modelBuilder.Entity("WebBriliFresh.Models.OrderDetail", b =>
                {
                    b.HasOne("WebBriliFresh.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("fk_Order_Details_1");

                    b.HasOne("WebBriliFresh.Models.Product", "Pro")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProId")
                        .IsRequired()
                        .HasConstraintName("fk_Order_Details_2");

                    b.Navigation("Order");

                    b.Navigation("Pro");
                });

            modelBuilder.Entity("WebBriliFresh.Models.Product", b =>
                {
                    b.HasOne("WebBriliFresh.Models.Type", "Type")
                        .WithMany("Products")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("fk_Product_1");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("WebBriliFresh.Models.ProductImage", b =>
                {
                    b.HasOne("WebBriliFresh.Models.Product", "Pro")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProId")
                        .HasConstraintName("fk_Product_Image_1");

                    b.Navigation("Pro");
                });

            modelBuilder.Entity("WebBriliFresh.Models.QnA", b =>
                {
                    b.HasOne("WebBriliFresh.Models.Customer", "Cus")
                        .WithMany("QnAs")
                        .HasForeignKey("CusId")
                        .HasConstraintName("fk_QnA_3");

                    b.HasOne("WebBriliFresh.Models.Product", "Pro")
                        .WithMany("QnAs")
                        .HasForeignKey("ProId")
                        .HasConstraintName("fk_QnA_2");

                    b.HasOne("WebBriliFresh.Models.QnA", "Reply")
                        .WithMany("InverseReply")
                        .HasForeignKey("ReplyId")
                        .HasConstraintName("fk_QnA_1");

                    b.Navigation("Cus");

                    b.Navigation("Pro");

                    b.Navigation("Reply");
                });

            modelBuilder.Entity("WebBriliFresh.Models.QnAImage", b =>
                {
                    b.HasOne("WebBriliFresh.Models.QnA", "QnA")
                        .WithMany("QnAImages")
                        .HasForeignKey("QnAid")
                        .HasConstraintName("fk_QnA_Image_1");

                    b.Navigation("QnA");
                });

            modelBuilder.Entity("WebBriliFresh.Models.Stock", b =>
                {
                    b.HasOne("WebBriliFresh.Models.Product", "Pro")
                        .WithMany("Stocks")
                        .HasForeignKey("ProId")
                        .IsRequired()
                        .HasConstraintName("fk_Stock_2");

                    b.HasOne("WebBriliFresh.Models.Store", "Store")
                        .WithMany("Stocks")
                        .HasForeignKey("StoreId")
                        .IsRequired()
                        .HasConstraintName("fk_Stock_1");

                    b.Navigation("Pro");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("WebBriliFresh.Models.Address", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebBriliFresh.Models.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Feedbacks");

                    b.Navigation("Orders");

                    b.Navigation("QnAs");
                });

            modelBuilder.Entity("WebBriliFresh.Models.DiscountOrder", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebBriliFresh.Models.Feedback", b =>
                {
                    b.Navigation("FeedbackImages");

                    b.Navigation("InverseReply");
                });

            modelBuilder.Entity("WebBriliFresh.Models.Order", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("WebBriliFresh.Models.Product", b =>
                {
                    b.Navigation("DiscountProducts");

                    b.Navigation("Feedbacks");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductImages");

                    b.Navigation("QnAs");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("WebBriliFresh.Models.QnA", b =>
                {
                    b.Navigation("InverseReply");

                    b.Navigation("QnAImages");
                });

            modelBuilder.Entity("WebBriliFresh.Models.Reward", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("WebBriliFresh.Models.Store", b =>
                {
                    b.Navigation("DiscountStores");

                    b.Navigation("Employees");

                    b.Navigation("Orders");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("WebBriliFresh.Models.Transport", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebBriliFresh.Models.Type", b =>
                {
                    b.Navigation("DiscountTypes");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("WebBriliFresh.Models.User", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
